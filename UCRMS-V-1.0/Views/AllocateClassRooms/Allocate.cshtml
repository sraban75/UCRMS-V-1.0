@model UCRMS_V_1._0.Models.MyModels.AllocateClassRoom

@{
    ViewBag.Title = "Allocate Class Room";
}

<h2>Allocate Class Room</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (TempData["Msg"] != null)
    {
        <label style="color: green">@TempData["Msg"]</label>
    }
    else
    {
        <label style="color: red">@TempData["Msgf"]</label>
    }

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", String.Empty)
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoomId, "Room No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoomId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DayId, "Day", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DayId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DayId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <tr>
                        <td>@Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })</td>
                    </tr>
                </table>
                @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <tr>
                        <td>@Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })</td>
                    </tr>
                </table>
                @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.From, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.From, new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.From)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.To, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.To, new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.To)
                </div>
            </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Allocate" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View Allocation's List", "ViewAllocations")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-2.2.0.js"></script>
<script>
    function FillData(id) {
        $("#CourseId").load('@Url.Action("LoadCourse")', { departmentId: id });
    }
    $(document).ready($(function () {
        $("#DepartmentId").change(function () {
            var id = $("#DepartmentId").val();
            FillData(id);

        });
    }));
</script>
